@page
@model EgdeBookingSystem.Pages.Bookings.CreateModel

@{
    ViewData["Title"] = "Create";
    Layout = "_Layout";
}


<script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
<script src="~/js/bootstrap-datepicker.js"></script>
<script src="~/js/bootstrap-datepicker.no.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
<link href="~/css/bootstrap-datepicker.css" rel="stylesheet" />
<link href="~/css/bootstrap-datepicker3.css" rel="stylesheet" />



<h4>Book @Model.Equipment.Name</h4>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Equipment.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Equipment.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Equipment.Info)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Equipment.Info)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Equipment.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Equipment.Category)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Equipment.Location)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Equipment.Location)
        </dd>
    </dl>
</div>

<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="Booking.UserEmail" value="@User.Identity.Name" class="form-control" readonly hidden />
            </div>
            <div class="form-group">
                <input asp-for="Booking.EquipmentID" value="@Model.Equipment.ID" class="form-control" readonly hidden />
            </div>
            <div class="form-group">
                <label asp-for="Booking.StartDate" class="control-label"></label>
                <input asp-for="Booking.StartDate" class="form-control" />
                <span asp-validation-for="Booking.StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Booking.EndDate" class="control-label"></label>
                <input asp-for="Booking.EndDate" class="form-control" />
                <span asp-validation-for="Booking.EndDate" class="text-danger"></span>
            </div>
            @*<div class="form-group">
                    <input type="text" name="daterange" />
                </div>*@
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="input-daterange input-group" id="datepicker">
    <input type="text" class="input-sm form-control" name="start" />
    <span class="input-group-addon">to</span>
    <input type="text" class="input-sm form-control" name="end" />
</div>

<div>
    <a asp-page="/UserView/Index">Back to List</a>
</div>
@if (Model.Bookings.Count != 0)
{
    <h4>Current bookings of equipment:</h4>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Bookings[0].UserEmail)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Bookings[0].StartDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Bookings[0].EndDate)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Bookings)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserEmail)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDate)
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h4>There are no bookings for this equipment!</h4>
}


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}

<script type="text/javascript">
    var disabledDated = JSON.parse('@Html.Raw(Model.BookingsDates)');

    $('#datepicker').datepicker({
        format: "dd/mm/yyyy",
        todayBtn: true,
        language: "no",
        forceParse: false,
        calendarWeeks: true,
        todayHighlight: true,
        datesDisabled: disabledDates
    });

        @*$(('input[name="daterange"]')).daterangepicker({
            "autoApply": true,
            "linkedCalendars": false,
            "showCustomRangeLabel": false,
            "startDate": "@DateTime.Now",
            "endDate": "@DateTime.Now",
            "drops": "auto"
        }, function (start, end, label) {
            console.log('New date range selected: ' + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD') + ' (predefined range: ' + label + ')');
        });*@
</script>
